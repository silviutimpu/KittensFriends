{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","address","city","CardList","monsters","map","SearchBox","placeHolder","handleChange","type","placeholder","onChange","App","e","setState","searchField","target","value","state","a","fetch","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2UAYeA,EARF,SAACC,GAAD,OACX,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACrB,6BAAKL,EAAMI,QAAQE,OACnB,6BAAKN,EAAMI,QAAQG,QAAQC,WCJlBC,EAAW,SAACT,GAAD,OACnB,qBAAKC,UAAU,YAAf,SACGD,EAAMU,SAASC,KAAI,SAAAP,GAAO,OAAI,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCH5CO,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBAAOC,KAAK,SAASd,UAAU,SAASe,YAAaH,EAAaI,SAAUH,MCwCjEI,E,kDArCb,aAAc,IAAD,8BACX,gBAcFJ,aAAe,SAAAK,GACb,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAbrC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IALJ,E,4FASb,8BAAAI,EAAA,sEACyBC,MAAM,8CAD/B,cACQC,EADR,gBAEsBA,EAASC,OAF/B,OAEQC,EAFR,OAGEC,KAAKV,SAAS,CAACV,SAAWmB,IAH5B,gD,0EAUA,WAAU,IAAD,EAC0BC,KAAKN,MAA/Bd,EADA,EACAA,SAAUW,EADV,EACUA,YACXU,EAAmBrB,EAASsB,QAAO,SAAA5B,GAAO,OAC9CA,EAAQE,KAAK2B,cAAcC,SAASb,EAAYY,kBAElD,OACE,sBAAKhC,UAAU,MAAf,UACA,oBAAIA,UAAU,QAAd,6BACE,cAAC,EAAD,CACAe,YAAY,gBACZF,aAAcgB,KAAKhB,eAEnB,cAAC,EAAD,CAAUJ,SAAUqB,W,GAhCVI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3ad8485a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css'\r\n\r\n\r\nconst Card = (props) => (\r\n  <div className='card-container'>\r\n    <img alt='kittie' src={`https://robohash.org/${props.monster.id}?set=set4&size=180x180`}></img>\r\n    <h1>{props.monster.name}</h1>\r\n    <h3>{props.monster.address.city}</h3>\r\n  </div>  \r\n);\r\n\r\nexport default Card;","import React from 'react';\r\nimport './card-list.style.css';\r\nimport Card from '../card/card.component';\r\n\r\nexport const CardList = (props) =>(\r\n     <div className=\"card-list\">{\r\n        props.monsters.map(monster => <Card key={monster.id} monster={monster}></Card>)\r\n    }</div>\r\n);\r\n","import React from 'react';\r\nimport './search-box.style.css';\r\n\r\nexport const SearchBox = ({placeHolder, handleChange}) => (\r\n    <input type='search' className='search' placeholder={placeHolder} onChange={handleChange} />\r\n)\r\n\r\n\r\n\r\n\r\n","import React, {Component} from 'react';\nimport './App.css';\n\nimport {CardList} from './components/card-list/card-list.component.jsx';\nimport { SearchBox } from './components/search-box/search-box.component.jsx';\n\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n  async componentDidMount() {\n    const response = await fetch('https://jsonplaceholder.typicode.com/users');\n    const users = await response.json();\n    this.setState({monsters : users})\n  }\n\n  handleChange = e => {\n    this.setState({searchField: e.target.value})\n  }\n\n  render() {\n    const {monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      )\n    return (\n      <div className=\"App\">\n      <h1 className=\"title\">Kittens Friends</h1>\n        <SearchBox\n        placeholder=\"search kittie\" \n        handleChange={this.handleChange }\n        />\n        <CardList monsters={filteredMonsters}></CardList> \n    </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}